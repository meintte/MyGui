name: CI

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            dependencies: sudo apt install xorg-dev
          - os: windows-latest
            dependencies: echo "No dependencies"
          - os: macos-latest
            dependencies: echo "No dependencies"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: "**/cpm_modules"
          key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - name: install dependencies
        run: |
          echo ${{ matrix.dependencies }}
          ${{ matrix.dependencies }}

      - name: configure
        run: cmake -Stest -Bbuild -DENABLE_TEST_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug

      - name: build
        run: cmake --build build -j4

      - name: test
        run: |
          cd build
          ctest --build-config Debug

      - name: collect code coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"

  install:
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - name: build Release
        run: |
          cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release
          sudo cmake --build build --target install
          rm -rf build
      - name: configure
        run: cmake -Stest -Bbuild -DTEST_INSTALLED_VERSION=1

      - name: build
        run: cmake --build build --config Debug -j4

      - name: test
        run: |
          cd build
          ctest --build-config Debug

  standalone:
    runs-on: ${{ matrix.os }}
    needs: install
    steps:
      - name: configure
        run: cmake -Sstandalone -Bbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug

      - name: build
        run: cmake --build build -j4

      - name: run
        run: ./build/Mygui
